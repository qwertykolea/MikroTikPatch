name: Patch Mikrotik RouterOS mmips
on:
  # push:
  #   branches: [ "main" ]
  #schedule:
  #  - cron: "0 0 * * *"
  workflow_dispatch:

permissions:
  contents: write

#CUSTOM_NPK_SIGN_PRIVATE_KEY: 2FCEF81602E48E7C4B588F9383FF1EF20CF25B153192F6C97F4CFD4E438EC043
#CUSTOM_NPK_SIGN_PUBLIC_KEY: 5F3012D7B82CD624CB09A7550325E956B839A18CFA079BD59627701C6E29DA87
#CUSTON_LICENSE_PRIVTE_KEY: 414FB96F9AA8FD5B6F2F995C8BAA818F15014C094C5C3653A7C0A636C1F2C907
#CUSTON_LICENSE_PUBLIC_KEY: 299F18DF19216683322543CA8649A33628B5BDA53C2C7731EC132113D9EB4167

env:
  CUSTOM_LICENSE_PRIVATE_KEY: '414FB96F9AA8FD5B6F2F995C8BAA818F15014C094C5C3653A7C0A636C1F2C907'
  CUSTOM_LICENSE_PUBLIC_KEY: '299F18DF19216683322543CA8649A33628B5BDA53C2C7731EC132113D9EB4167'
  CUSTOM_NPK_SIGN_PRIVATE_KEY: '2FCEF81602E48E7C4B588F9383FF1EF20CF25B153192F6C97F4CFD4E438EC043'
  CUSTOM_NPK_SIGN_PUBLIC_KEY: '5F3012D7B82CD624CB09A7550325E956B839A18CFA079BD59627701C6E29DA87'
  CUSTOM_CLOUD_PUBLIC_KEY: '5F3012D7B82CD624CB09A7550325E956B839A18CFA079BD59627701C6E29DA87'
  MIKRO_LICENSE_PUBLIC_KEY: '8E1067E4305FCDC0CFBF95C10F96E5DFE8C49AEF486BD1A4E2E96C27F01E3E32'
  MIKRO_NPK_SIGN_PUBLIC_LKEY: 'C293CED638A2A33C681FC8DE98EE26C54EADC5390C2DFCE197D35C83C416CF59'
  MIKRO_CLOUD_PUBLIC_KEY: '5F3012D7B82CD624CB09A7550325E956B839A18CFA079BD59627701C6E29DA87'
  MIKRO_LICENCE_URL: "upgrade.mikrotik.com"
  CUSTOM_LICENCE_URL: "upgrade.mikrotik.com"
  MIKRO_UPGRADE_URL: "upgrade.mikrotik.com"
  CUSTOM_UPGRADE_URL: "upgrade.mikrotik.com"
  MIKRO_RENEW_URL: "upgrade.mikrotik.com"
  CUSTOM_RENEW_URL: "upgrade.mikrotik.com"
  MIKRO_CLOUD_URL: "upgrade.mikrotik.com"
  CUSTOM_CLOUD_URL: "upgrade.mikrotik.com"

jobs:
  Set_BuildTime:
    runs-on: ubuntu-22.04
    outputs:
      BUILD_TIME: ${{ steps.set_buildtime.outputs.BUILD_TIME }}
    steps:
      - name: Set build time
        id: set_buildtime
        run: echo "BUILD_TIME=$(date +'%s')" >> $GITHUB_OUTPUT

  Patch_RouterOS:
    needs: Set_BuildTime
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        arch: [mmips]
        channel: [stable]
    env:
      TZ: 'Asia/Shanghai'
      LATEST_VERSION: "7.16"
      ARCH: "mmips"

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
        
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11' 

    - name: Cache NetInstall ${{ env.LATEST_VERSION }}
      if: steps.get_latest.outputs.has_new_version == 'true' && matrix.arch == 'x86'
      id: cache-netinstall
      uses: actions/cache@v4
      with:
        path: |
          netinstall.zip
          netinstall.tar.gz
        key: netinstall-${{ env.LATEST_VERSION }}

    - name: Get netinstall ${{ env.LATEST_VERSION }}
      if: steps.get_latest.outputs.has_new_version == 'true' && matrix.arch == 'x86' && steps.cache-netinstall.outputs.cache-hit != 'true'
      run: |
        sudo wget -nv -O netinstall.zip https://download.mikrotik.com/routeros/$LATEST_VERSION/netinstall-$LATEST_VERSION.zip
        sudo wget -nv -O netinstall.tar.gz https://download.mikrotik.com/routeros/$LATEST_VERSION/netinstall-$LATEST_VERSION.tar.gz

    - name: Patch netinstall ${{ env.LATEST_VERSION }}
      if: steps.get_latest.outputs.has_new_version == 'true' && matrix.arch == 'x86'
      run: |
        sudo unzip netinstall.zip
        sudo -E python3 patch.py netinstall netinstall.exe
        sudo zip netinstall-$LATEST_VERSION.zip ./netinstall.exe
        sudo tar -xvf netinstall.tar.gz
        sudo -E python3 patch.py netinstall netinstall-cli
        sudo tar -czvf netinstall-$LATEST_VERSION.tar.gz ./netinstall-cli

   
    - name: Get mikrotik-${{ env.LATEST_VERSION }}-${{ env.ARCH }}.npk
      run: |
        sudo wget -nv -O routeros-$LATEST_VERSION-${{ env.ARCH }}.npk https://download.mikrotik.com/routeros/$LATEST_VERSION/routeros-$LATEST_VERSION-${{ env.ARCH }}.npk

    - name: Patch mikrotik-${{ env.LATEST_VERSION }}-${{ env.ARCH }}.npk
      run: |
        #sudo -E python3 patch.py npk routeros-$LATEST_VERSION-${{ env.ARCH }}.npk
        #sudo -E python3 npk.py sign routeros-$LATEST_VERSION-${{ env.ARCH }}.npk routeros-$LATEST_VERSION-${{ env.ARCH }}.npk

        sudo -E python3 patch.py npk routeros-$LATEST_VERSION-${{ env.ARCH }}.npk 

        # sudo zip routeros-$LATEST_VERSION-${{ env.ARCH }}.zip routeros-$LATEST_VERSION-${{ env.ARCH }}.npk


    - name: Create Release tag ${{ env.LATEST_VERSION }} ${{ matrix.arch }}
      uses: softprops/action-gh-release@v2
      with:
        name: "RouterOS ${{ env.LATEST_VERSION }} ${{ env.ARCH }}"
        tag_name: ${{ env.LATEST_VERSION }}${{ env.ARCH }}
        files: |
          netinstall-${{ env.LATEST_VERSION }}.*
          routeros-${{ env.LATEST_VERSION }}-${{ env.ARCH }}.npk
          *.EFI
    



    
